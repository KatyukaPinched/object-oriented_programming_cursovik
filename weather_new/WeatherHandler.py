import requests
import json
from telebot import types

API = '23f9689ab554f3588bec403da4fa41ef'

class WeatherHandler:
    def __init__(self, bot):
        self.bot = bot
        self.weather_data = None

    def handle_message(self, message):
        if message.content_type == 'text':
            self.handle_text_message(message)
        else:
            self.handle_non_text_message(message)

    def handle_non_text_message(self, message):
        if message.content_type == 'audio':
            self.bot.reply_to(message,
                              f"–ê—É–¥–∏–æ ‚Äî –±–æ–º–±–∞!üí£üéµ –ù–æ –¥–∞–Ω–Ω—ã–π –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å —Ç–µ–∫—Å—Ç–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π, –ø–æ—ç—Ç–æ–º—É, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ))")

        elif message.content_type == 'video_note':
            self.bot.reply_to(message,
                              f"–ö—Ä—É–∂–æ—á–µ–∫ ‚Äî –±–æ–º–±–∞!üí£üî¥ –ù–æ –¥–∞–Ω–Ω—ã–π –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å —Ç–µ–∫—Å—Ç–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π, –ø–æ—ç—Ç–æ–º—É, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ))")

        elif message.content_type == 'voice':
            self.bot.reply_to(message,
                              f"–ì–æ–ª–æ—Å–æ–≤–æ–µ ‚Äî –±–æ–º–±–∞!üí£üéô –ù–æ –¥–∞–Ω–Ω—ã–π –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å —Ç–µ–∫—Å—Ç–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π, –ø–æ—ç—Ç–æ–º—É, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ))")

        elif message.content_type == 'video':
            self.bot.reply_to(message,
                              f"–í–∏–¥–µ–æ ‚Äî –±–æ–º–±–∞!üí£üé• –ù–æ –¥–∞–Ω–Ω—ã–π –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å —Ç–µ–∫—Å—Ç–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π, –ø–æ—ç—Ç–æ–º—É, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ))")

        elif message.content_type == 'photo':
            self.bot.reply_to(message,
                              f"–§–æ—Ç–æ ‚Äî –±–æ–º–±–∞!üí£üì∏ –ù–æ –¥–∞–Ω–Ω—ã–π –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å —Ç–µ–∫—Å—Ç–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π, –ø–æ—ç—Ç–æ–º—É, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ))")
        else: self.bot.reply_to(message,
                          f"–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å.")


    def handle_text_message(self, message):
        city = message.text
        self.weather_data = self.get_weather(city)
        if self.weather_data: self.send_weather_keyboard(message.chat.id)
        else:
            self.bot.reply_to(message, f'–ì–æ—Ä–æ–¥ —É–∫–∞–∑–∞–Ω –Ω–µ–≤–µ—Ä–Ω–æ üò° –ù–µ –±–∞–ª—É–π—Å—è, –ø–∏—à–∏ –Ω–æ—Ä–º–∞–ª—å–Ω–æ üòå')

    def send_weather_keyboard(self, chat_id):
        keyboard = types.InlineKeyboardMarkup()
        btn1 = types.InlineKeyboardButton("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ üå°", callback_data='temperature')
        btn2 = types.InlineKeyboardButton("–î–∞–≤–ª–µ–Ω–∏–µ üòñ", callback_data='pressure')
        keyboard.row(btn1, btn2)
        btn3 = types.InlineKeyboardButton("–û–±–ª–∞—á–Ω–æ—Å—Ç—å üå´", callback_data='cloud')
        btn4 = types.InlineKeyboardButton("–í–ª–∞–∂–Ω–æ—Å—Ç—å üí¶", callback_data='humidity')
        keyboard.row(btn3, btn4)
        btn5 = types.InlineKeyboardButton("–í–∏–¥–∏–º–æ—Å—Ç—å üõ§", callback_data='visibility')
        btn6 = types.InlineKeyboardButton("–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ üí®", callback_data='wind')
        keyboard.row(btn5, btn6)
        btn7 = types.InlineKeyboardButton("–í–≤–µ—Å—Ç–∏ –Ω–æ–≤—ã–π –≥–æ—Ä–æ–¥ üåá", callback_data='new_city')
        keyboard.row(btn7)

        self.bot.send_message(chat_id, f"–ü–æ–¥—Å–∫–∞–∂–∏, –∫–∞–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–π —Ç–µ–±–µ –±—ã–ª–æ –±—ã –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ —É–∑–Ω–∞—Ç—å? ü•∏",
                              reply_markup=keyboard)

    def get_weather(self, city):
        try:
            res = requests.get(f'https://api.openweathermap.org/data/2.5/weather?q={city}&appid={API}&units=metric')
            res.raise_for_status()
            return res.json()
        except requests.exceptions.RequestException as e:
            print(f"–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ API: {e}")
            return None
        except json.JSONDecodeError as e:
            print(f"–û—à–∏–±–∫–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è JSON: {e}")
            return None

    def handle_callback(self, callback):
        chat_id = callback.message.chat.id
        weather_data = getattr(self, 'weather_data', None)

        if callback.data == 'temperature':
            if -10 > weather_data['main']['temp']:
                self.bot.edit_message_text(
                    f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ = {weather_data['main']['temp']} ¬∞C ü•∂\n–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {weather_data['main']['feels_like']}",
                    chat_id, callback.message.message_id)
            elif weather_data['main']['temp'] > 10:
                self.bot.edit_message_text(
                    f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ = {weather_data['main']['temp']} ¬∞C ü•µ\n–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {weather_data['main']['feels_like']}",
                    chat_id, callback.message.message_id)
            else:
                self.bot.edit_message_text(
                    f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ = {weather_data['main']['temp']} ¬∞C üòä\n–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {weather_data['main']['feels_like']}",
                    chat_id, callback.message.message_id)
        elif callback.data == 'pressure':
            self.bot.edit_message_text(f"–î–∞–≤–ª–µ–Ω–∏–µ = {weather_data['main']['pressure']} hPa", chat_id,
                                       callback.message.message_id)
        elif callback.data == 'cloud':
            if weather_data['clouds']['all'] <= 20:
                self.bot.edit_message_text(f"–û–±–ª–∞—á–Ω–æ—Å—Ç—å = {weather_data['clouds']['all']}% ‚òÄÔ∏è", chat_id,
                                           callback.message.message_id)
            elif weather_data['clouds']['all'] <= 40:
                self.bot.edit_message_text(
                    f"–û–±–ª–∞—á–Ω–æ—Å—Ç—å = {weather_data['clouds']['all']}% üå§", chat_id, callback.message.message_id)
            elif weather_data['clouds']['all'] <= 60:
                self.bot.edit_message_text(
                    f"–û–±–ª–∞—á–Ω–æ—Å—Ç—å = {weather_data['clouds']['all']}% ‚õÖÔ∏è", chat_id, callback.message.message_id)
            elif weather_data['clouds']['all'] <= 80:
                self.bot.edit_message_text(
                    f"–û–±–ª–∞—á–Ω–æ—Å—Ç—å = {weather_data['clouds']['all']}% üå•", chat_id, callback.message.message_id)
            elif weather_data['clouds']['all'] <= 100:
                self.bot.edit_message_text(
                    f"–û–±–ª–∞—á–Ω–æ—Å—Ç—å = {weather_data['clouds']['all']}% ‚òÅÔ∏è", chat_id, callback.message.message_id)
        elif callback.data == 'humidity':
            if weather_data['main']['humidity'] < 50:
                self.bot.edit_message_text(f"–í–ª–∞–∂–Ω–æ—Å—Ç—å = {weather_data['main']['humidity']}% ‚òÇÔ∏è", chat_id,
                                           callback.message.message_id)
            else:
                self.bot.edit_message_text(f"–í–ª–∞–∂–Ω–æ—Å—Ç—å = {weather_data['main']['humidity']}% ‚òîÔ∏è", chat_id,
                                           callback.message.message_id)
        elif callback.data == 'visibility':
            self.bot.edit_message_text(f"–í–∏–¥–∏–º–æ—Å—Ç—å = {weather_data['visibility']} –º", chat_id,
                                       callback.message.message_id)
        elif callback.data == 'wind':
            if weather_data['wind']['speed'] < 10:
                self.bot.edit_message_text(f"–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ = {weather_data['wind']['speed']} –º/—Å üå¨", chat_id,
                                           callback.message.message_id)
            else:
                self.bot.edit_message_text(f"–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ = {weather_data['wind']['speed']} –º/—Å üå™", chat_id,
                                           callback.message.message_id)
        elif callback.data == 'new_city':
            self.bot.edit_message_text("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –≥–æ—Ä–æ–¥:", chat_id, callback.message.message_id)

        if callback.data != 'new_city':
            self.bot.send_message(chat_id, f"–í—ã —Ö–æ—Ç–∏—Ç–µ –µ—â–µ —á—Ç–æ-—Ç–æ –µ—â–µ —É–∑–Ω–∞—Ç—å –æ –ø–æ–≥–æ–¥–µ –≤ –¥–∞–Ω–Ω–æ–º –≥–æ—Ä–æ–¥–µ? üßê")

            keyboard = types.InlineKeyboardMarkup()
            btn1 = types.InlineKeyboardButton("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ üå°", callback_data='temperature')
            btn2 = types.InlineKeyboardButton("–î–∞–≤–ª–µ–Ω–∏–µ üòñ", callback_data='pressure')
            keyboard.row(btn1, btn2)
            btn3 = types.InlineKeyboardButton("–û–±–ª–∞—á–Ω–æ—Å—Ç—å üå´", callback_data='cloud')
            btn4 = types.InlineKeyboardButton("–í–ª–∞–∂–Ω–æ—Å—Ç—å üí¶", callback_data='humidity')
            keyboard.row(btn3, btn4)
            btn5 = types.InlineKeyboardButton("–í–∏–¥–∏–º–æ—Å—Ç—å üõ§", callback_data='visibility')
            btn6 = types.InlineKeyboardButton("–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ üí®", callback_data='wind')
            keyboard.row(btn5, btn6)
            btn7 = types.InlineKeyboardButton("–í–≤–µ—Å—Ç–∏ –Ω–æ–≤—ã–π –≥–æ—Ä–æ–¥ üåá", callback_data='new_city')
            keyboard.row(btn7)

            self.bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å:", reply_markup=keyboard)

    def run(self):
        self.bot.polling()